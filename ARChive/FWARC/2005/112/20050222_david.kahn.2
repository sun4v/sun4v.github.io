1. Introduction
    1.1. Project/Component Working Name:
	sun4v io-api

    1.2. Name of Document Author/Supplier:
	David.Kahn@sun.com

    1.3. Date of This Document:
	Tue Feb 22 16:03:30 PST 2005

    1.4. Name of Major Document Customer(s)/Consumer(s):
	1.4.1. The PAC or CPT you expect to review your project:
		HS-PAC

	1.4.2. The ARC(s) you expect to review your project:
		FWARC

	1.4.3. The Director/VP who is "Sponsoring" this project:
		Tony Barreca

	1.4.4. The name of your business unit:
		Scalable Systems Group (SSG)
			(Central Engineering)

    1.5. Email Aliases:
     	1.5.1. Responsible Manager: David.Banman@Sun.Com
     	1.5.2. Responsible Engineer: David.Kahn@sun.com
     	1.5.3. Marketing Manager: Neil.Sadaranganey@sun.com XXX
	1.5.4. Interest List: sun4v-iteam@sun.com

2. Project Summary
    2.1. Project Description:

	This case is a part of the sun4v umbrella case
	FWARC/2004/510.

	This case defines the I/O API for sun4v, and specifically
	for PCI* style buses.

	This case depends on and extends the Sun4v API case
	(case number is TBD.)

	Abstractions are defined for registers access, config space
	access, setting up and tearing down iommu mappings, etc.

	Abstractions are required to prevent direct access by the
	"guest" to certain hardware to protect the "system".

	
    2.2. Risks and Assumptions:

	See FWARC/2004/510

3. Business Summary
    3.1. Problem Area:

	See FWARC/2004/510

    3.2. Market/Requester:

	See FWARC/2004/510

    3.3. Business Justification:

	See FWARC/2004/510

    3.4. Competitive Analysis:

	See FWARC/2004/510

    3.5. Opportunity Window/Exposure:

	See FWARC/2004/510

    3.6. How will you know when you are done?:

	See FWARC/2004/510

4. Technical Description:

    4.1 Overview

	See FWARC/2004/510 for overview.

	Abstractions are provided for physical access to registers
	and devices (including configuration space) in order to
	protect the overall system.

	The level of abstraction is designed to fit into the
	DDI implementation for a platform and for the pci root nexus.

	A DDI-compliant device driver should require no changes
	to work with this io-api.

5. Reference Documents:
	
	The architecture and PLC documents are available
	at http://projectq.sfbay.sun.com and include:

		Sun4v architecture specification.
		Sun4v hyper-privileged reference architecture
		Hypervisor API specifications
		sun4v Functional specification
		sun4v Solaris Functional specification


6. Resources and Schedule:
    6.1. Projected Availability:
	
	Ontario FCS

    6.2. Cost of Effort:

	See FWARC/2004/510

    6.3. Cost of Capital Resources:

	Capital resources are subsumed as part of overall product development.

    6.4. Product Approval Committee requested information:
    	6.4.1. Consolidation Name:
		Delivery of firmware will be platform teams
		Delivery of sun4v OS will be platform teams (ON)
		
    	6.4.2. Contributing OpCo/BU/Division Name:
		
		Scalable Systems Group
		
	6.4.3. Type of PAC Review and Approval expected:
		N/A (see umbrella case)

         6.4.4. Project Boundary Conditions:
		N/A

	6.4.5. Is this a necessary project for OEM agreements:
		No.

	6.4.6. Notes/Dependencies:

		The sun4v io-api builds and expands on the
		sun4v API case (case number TBD).

	6.4.7. Target RTI Date/Release:
	        N/A - Not a separate deliverable.

	6.4.8. Target Code Design Review Date:
		Q1CY05 for Niagara-I version 1.0

	6.4.9. Update approval addition:
	        N/A

    6.5. ARC review type:
		Full Review

7. Prototype Availability:
    7.1. Prototype Availability:
	Q1FY05

    7.2. Prototype Cost:
	Done using existing resources.




